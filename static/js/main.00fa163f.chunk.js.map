{"version":3,"sources":["services/api.js","pages/ListCategories.js","components/Card.js","pages/LandingPage.js","pages/Cart.js","components/EvaluationForm.js","components/Evaluations.js","pages/ProductDetais.js","components/CardReview.js","components/ReviewProducts.js","components/PayMethod.js","components/ClientsData.js","pages/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["a","fetch","requestReturn","json","categories","getProductsFromCategoryAndQuery","categoryId","query","result","itens","ListCategories","props","state","handleClick","bind","api","then","response","setState","event","onChange","this","target","value","className","map","category","htmlFor","id","key","type","name","data-testid","React","Component","Card","product","handleAddClick","handleSubClick","handleDeleteClick","availableQuantity","available_quantity","quantityToOrder","onClick","disabled","to","pathname","testid","inCart","title","thumbnail","price","free","shipping","free_shipping","src","alt","parseFloat","toFixed","cartActionButtons","cardButtons","LandingPage","products","search","numberOfProducts","fetchProductsByQuery","fetchProductsByCategoryId","hendleChange","inputButton","quantityOfProducts","productsContent","itemsInCart","JSON","parse","localStorage","getItem","indexOfProduct","findIndex","item","setItem","stringify","itemsToAdd","quantity","reduce","acc","curr","items","results","length","placeholder","Cart","cartProducts","getProdutsInLocalStorage","hasProducts","console","log","splice","emputCart","EvaluationFrom","email","message","handleChange","onSubmit","required","Evaluations","star","evaluations","evaluation","ProductDetais","disableButton","newEvaluaion","link","location","attributes","atribut","value_name","EvaluationForm","CardReview","ReviewProducts","total","totalValue","cur","PayMethod","card","ClientsData","userData","cpf","telefone","cep","endereco","complemento","numero","cidade","estado","onTag","checkForm","home","prevState","keyName","tagName","window","href","Object","values","some","el","clear","Checkout","App","path","render","component","exact","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"kZAAO,8BAAAA,EAAA,sEACuBC,MAAM,qDAD7B,cACCC,EADD,gBAEoBA,EAAcC,OAFlC,cAECC,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeC,EAAtB,oC,4CAAO,WAA+CC,EAAYC,GAA3D,iBAAAP,EAAA,0DAEDM,EAFC,gCAGYL,MAAM,0DAAD,OAA2DK,IAH5E,OAGHE,EAHG,6CAKYP,MAAM,mDAAD,OAAoDM,IALrE,OAKHC,EALG,+BAOeA,EAAOL,OAPtB,eAOCM,EAPD,yBAQEA,GARF,6C,0BCkDQC,E,kDAnDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXR,WAAY,IAGd,EAAKS,YAAc,EAAKA,YAAYC,KAAjB,gBAPF,E,gEAUE,IAAD,QDff,WAAP,gCCgBIC,GACGC,MAAK,SAACC,GAAD,OAAc,EACjBC,SAAS,CAAEd,WAAYa,S,kCAGlBE,IAEVC,EADqBC,KAAKV,MAAlBS,UACCD,EAAMG,OAAOC,S,+BAGd,IACAnB,EAAeiB,KAAKT,MAApBR,WACR,OACE,yBAAKoB,UAAU,kBACb,0CACA,yBAAKJ,SAAWC,KAAKR,aAClBT,EAAWqB,KAAI,SAACC,GAAD,OACd,2BAAOC,QAAUD,EAASE,GAAKC,IAAMH,EAASE,IAC5C,2BACEE,KAAK,QACLP,MAAQG,EAASE,GACjBC,IAAMH,EAASE,GACfG,KAAK,WACLH,GAAKF,EAASE,GACdI,cAAY,aAEZN,EAASK,KACX,uC,GAvCeE,IAAMC,WC2GpBC,G,wDAzGb,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IAEDE,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,2DAMiB,IAAZS,EAAW,EAArBD,OAAUC,MAAW,EACsCF,KAAKV,MAApEyB,EADyB,EACzBA,QAASC,EADgB,EAChBA,eAAgBC,EADA,EACAA,eAAgBC,EADhB,EACgBA,kBACjD,OAAQhB,GACR,IAAK,IACHc,EAAeD,GACf,MACF,IAAK,IACHE,EAAeF,GACf,MACF,QACEG,EAAkBH,EAAQR,O,0CAIT,IACXQ,EAAYf,KAAKV,MAAjByB,QACoBI,EAAuCJ,EAA3DK,mBAAuCC,EAAoBN,EAApBM,gBAE/C,OACE,6BACE,wBAAIV,cAAY,kCAAmCU,GACnD,4BAAQZ,KAAK,SAASa,QAAUtB,KAAKR,aAArC,KACA,4BACEiB,KAAK,SACLa,QAAUtB,KAAKR,YACfU,MAAM,IACNqB,SATe,IASaF,EAC5BV,cAAY,6BALd,KASA,4BACEF,KAAK,SACLa,QAAUtB,KAAKR,YACfU,MAAM,IACNqB,SAAWJ,GAAqBE,EAChCV,cAAY,6BALd,Q,oCAaS,IACLI,EAAYf,KAAKV,MAAjByB,QACAR,EAA+DQ,EAA/DR,GAAIc,EAA2DN,EAA3DM,gBAAqCF,EAAsBJ,EAA1CK,mBAC7B,OACE,6BACE,4BACEX,KAAK,SACLE,cAAY,sBACZW,QAAUtB,KAAKR,YACfU,MAAM,IACNqB,SAAWF,GAAmBF,GALhC,aASA,2BACE,kBAAC,IAAD,CACER,cAAY,sBACZH,IAAMD,EACNiB,GAAK,CAAEC,SAAS,YAAD,OAAclB,GAAMhB,MAAO,CAAEwB,aAH9C,oB,+BAYE,IAAD,EAC6Bf,KAAKV,MAAjCyB,EADD,EACCA,QAASW,EADV,EACUA,OAAQC,EADlB,EACkBA,OACjBC,EAAmEb,EAAnEa,MAAOC,EAA4Dd,EAA5Dc,UAAWC,EAAiDf,EAAjDe,MAAOvB,EAA0CQ,EAA1CR,GAA+BwB,EAAWhB,EAAtCiB,SAAYC,cACjD,OACE,yBAAK9B,UAAU,UAAUQ,cAAY,WACnC,wBAAIA,cAAce,GAAWE,GAC7B,yBAAKzB,UAAU,aAAa+B,IAAML,EAAYM,IAAI,YAClD,wCACUC,WAAWN,GAAOO,QAAQ,KAEnCN,GAAQ,uBAAGpB,cAAY,iBAAf,mBACRgB,GAAU3B,KAAKsC,kBAAkB/B,IAChCoB,GAAU3B,KAAKuC,mB,GA1FN1B,cCiJJ2B,E,kDA/Ib,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXkD,SAAU,GACVC,OAAQ,GACRC,iBAAkB,GAGpB,EAAKC,qBAAuB,EAAKA,qBAAqBnD,KAA1B,gBAC5B,EAAKoD,0BAA4B,EAAKA,0BAA0BpD,KAA/B,gBACjC,EAAKqD,aAAe,EAAKA,aAAarD,KAAlB,gBACpB,EAAKsD,YAAc,EAAKA,YAAYtD,KAAjB,gBACnB,EAAKuB,eAAiB,EAAKA,eAAevB,KAApB,gBACtB,EAAKuD,mBAAqB,EAAKA,mBAAmBvD,KAAxB,gBAC1B,EAAKwD,gBAAkB,EAAKA,gBAAgBxD,KAArB,gBAfN,E,gEAmBjBO,KAAKgD,uB,qCAGQjC,GACb,IAAMmC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBACpD,GAAKJ,EAGE,CACL,IAAMK,EAAiBL,EAAYM,WAAU,SAACC,GAAD,OAAUA,EAAKlD,KAAOQ,EAAQR,MAC3E,GAAIgD,GAAkB,EACpBL,EAAYK,GAAgBlC,iBAAmB,EAC/CgC,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAUT,QAC/C,CACLnC,EAAO,2BAAQA,GAAR,IAAiBM,gBAAiB,IACzC,IAAMuC,EAAU,sBAAOV,GAAP,CAAoBnC,IACpCsC,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAUC,UAVtD7C,EAAO,2BAAQA,GAAR,IAAiBM,gBAAiB,IACzCgC,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAU,CAAC5C,KAYvDf,KAAKgD,uB,2CAIL,IAAME,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBACpD,GAAIJ,EAAa,CACf,IAAMW,EAAWX,EAAYY,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAK3C,kBAAiB,GAC/ErB,KAAKH,SAAS,CAAE8C,iBAAkBkB,O,sKAK5BnB,EAAW1C,KAAKT,MAAhBmD,O,SACY1D,GAAgC,EAAO0D,G,OAArDuB,E,OACNjE,KAAKH,SAAS,CACZ4C,SAAUwB,EAAMC,U,+LAIYjF,G,uFACVD,EAAgCC,GAAY,G,OAA1DgF,E,OACNjE,KAAKH,SAAS,CACZ4C,SAAUwB,EAAMC,U,0IAIPpE,GAAQ,IACXI,EAAUJ,EAAMG,OAAhBC,MACRF,KAAKH,SAAS,CACZ6C,OAAQxC,M,wCAIO,IAAD,OACRuC,EAAazC,KAAKT,MAAlBkD,SACR,OAAwB,IAApBA,EAAS0B,OAET,wBAAIhE,UAAU,WAAWQ,cAAY,wBAArC,4DAMF,yBAAKR,UAAU,YACXsC,EACCrC,KAAI,SAACW,GAAD,OACH,kBAAC,EAAD,CACEA,QAAUA,EACVP,IAAMO,EAAQR,GACdS,eAAiB,EAAKA,uB,oCAOnB,IAAD,OACJ2B,EAAqB3C,KAAKT,MAA1BoD,iBACR,OACE,yBAAKxC,UAAU,gBACb,2BACEM,KAAK,OACLE,cAAY,cACZZ,SAAWC,KAAK8C,aAChB3C,UAAU,aACViE,YAAY,kBAEd,4BACE3D,KAAK,SACLE,cAAY,eACZW,QAAU,kBAAM,EAAKsB,wBACrBzC,UAAU,eAJZ,aAQA,kBAAC,IAAD,CAAMA,UAAU,WAAWqB,GAAG,QAAQb,cAAY,wBAChD,yBACEuB,IAAI,mEACJC,IAAI,OACJhC,UAAU,WAEZ,0BACEA,UAAU,MACVQ,cAAY,sBAEVgC,O,+BAQV,OACE,yBAAKxC,UAAU,eACb,kBAAC,EAAD,CAAgBJ,SAAWC,KAAK6C,4BAChC,yBAAK1C,UAAU,aACXH,KAAK+C,cACL/C,KAAKiD,wB,GAzISrC,IAAMC,WCsIjBwD,E,kDAtIb,WAAY/E,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACX+E,aAAc,IAGhB,EAAKC,yBAA2B,EAAKA,yBAAyB9E,KAA9B,gBAChC,EAAK+E,YAAc,EAAKA,YAAY/E,KAAjB,gBACnB,EAAKuB,eAAiB,EAAKA,eAAevB,KAApB,gBACtB,EAAKyB,kBAAoB,EAAKA,kBAAkBzB,KAAvB,gBACzB,EAAKwB,eAAiB,EAAKA,eAAexB,KAApB,gBAXL,E,gEAejBO,KAAKuE,6B,qCAGQxD,GACb,IAAMmC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBAEpD,GADAmB,QAAQC,IAAIxB,GACPA,EAGE,CACL,IAAMK,EAAiBL,EAAYM,WAAU,SAACC,GAAD,OAAUA,EAAKlD,KAAOQ,EAAQR,MAC3E,GAAIgD,GAAkB,EACpBL,EAAYK,GAAgBlC,iBAAmB,EAC/CgC,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAUT,QAC/C,CACLnC,EAAO,2BAAQA,GAAR,IAAiBM,gBAAiB,IACzC,IAAMuC,EAAU,sBAAOV,GAAP,CAAoBnC,IACpCsC,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAUC,UAVtD7C,EAAO,2BAAQA,GAAR,IAAiBM,gBAAiB,IACzCgC,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAU,CAAC5C,KAYvDf,KAAKuE,6B,qCAGQxD,GACb,IAAMmC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBAC9CC,EAAiBL,EAAYM,WAAU,SAACC,GAAD,OAAUA,EAAKlD,KAAOQ,EAAQR,MAC3E2C,EAAYK,GAAgBlC,iBAAmB,EAC/CgC,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAUT,IACpDlD,KAAKuE,6B,wCAGWhE,GAChB,IAAM2C,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBAC9CC,EAAiBL,EAAYM,WAAU,SAACC,GAAD,OAAUA,EAAKlD,KAAOA,KACnE2C,EAAYyB,OAAOpB,EAAgB,GACnCF,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAUT,IACpDlD,KAAKuE,6B,iDAIL,IAAMrB,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBAChDJ,GACFlD,KAAKH,SAAS,CACZyE,aAAa,YAAKpB,O,oCAKT,IAAD,OACJoB,EAAiBtE,KAAKT,MAAtB+E,aAGR,OACE,yBAAKnE,UAAU,YACb,kBAAC,IAAD,CAAMqB,GAAG,KAAI,yBAAKU,IAJR,2DAIsBC,IAAI,QAAQhC,UAAU,kBACtD,6BACE,yBAAK+B,IALG,mEAKUC,IAAI,OAAOhC,UAAU,WACvC,8BAAM,0DAER,wDAEQmE,EAAaH,OAFrB,0BAKA,kBAAC,IAAD,CAAM3C,GAAG,aACP,4BAAQf,KAAK,SAASE,cAAY,qBAAlC,qBAIF,yBAAKR,UAAU,YACZmE,EAAalE,KAAI,SAACW,GAAD,OAChB,kBAAC,EAAD,CACEP,IAAMO,EAAQR,GACdQ,QAAUA,EACVW,OAAO,6BACPC,QAAM,EACNT,kBAAoB,EAAKA,kBACzBD,eAAiB,EAAKA,eACtBD,eAAiB,EAAKA,wB,kCAWhC,OACE,yBAAKb,UAAU,aACb,kBAAC,IAAD,CAAMqB,GAAG,KACP,yBAAKU,IALG,2DAKWC,IAAI,QAAQhC,UAAU,kBAE3C,6BACE,yBACE+B,IARM,mEASNC,IAAI,OACJhC,UAAU,WAEZ,8BAAM,0DAER,uBAAGQ,cAAY,+BAAf,8BACA,yBAAKuB,IAAI,wEAAwEC,IAAI,W,+BAKjF,IACAmC,EAAiBtE,KAAKT,MAAtB+E,aACR,OACE,6BACGA,EAAaH,OAAS,GAAKnE,KAAKwE,cAChCF,EAAaH,QAAU,GAAKnE,KAAK4E,iB,GAjIvB/D,a,QCuDJgE,E,kDAxDb,WAAYvF,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXuF,MAAO,GACPC,QAAS,IAGX,EAAKC,aAAe,EAAKA,aAAavF,KAAlB,gBACpB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBATF,E,yDAYNiB,E,GAA8B,IAAZR,EAAW,EAArBD,OAAUC,MAC7BF,KAAKH,SAAL,eAAiBa,EAAOR,M,qCAKxB+E,EADqBjF,KAAKV,MAAlB2F,UACCjF,KAAKT,S,+BAGN,IAAD,OACP,OACE,yBAAKY,UAAU,cACb,gDACA,0BAAMA,UAAU,kBACd,2BAAOG,QAAQ,SACb,2BACEC,GAAG,QACHE,KAAK,QACL2D,YAAY,kBACZrE,SAAW,SAACD,GAAD,OAAW,EAAKkF,aAAa,QAASlF,IACjDoF,UAAQ,KAGZ,2BAAO5E,QAAQ,WACb,8BACEC,GAAG,UACH6D,YAAY,yCACZrE,SAAW,SAACD,GAAD,OAAW,EAAKkF,aAAa,UAAWlF,IACnDa,cAAY,+BAGhB,4BAAQF,KAAK,SAASa,QAAUtB,KAAKR,aAArC,mC,GA5CmBqB,aCiCdsE,E,uKA/BX,IAAMC,EAAO,+DACLC,EAAgBrF,KAAKV,MAArB+F,YACR,OAAKA,EAEHA,EAAYjF,KAAI,SAACkF,GAAD,OACd,yBAAKnF,UAAU,gBAAgBK,IAAM8E,EAAWR,OAC9C,8BAAQQ,EAAWR,OACnB,6BACE,yBACE5C,IAAMkD,EACNjD,IAAI,SAEN,yBACED,IAAMkD,EACNjD,IAAI,SAEN,yBACED,IAAMkD,EACNjD,IAAI,UAGR,2BAAKmD,EAAWP,aAnBG,+D,GAJHlE,aC4IX0E,E,kDAvIb,WAAYjG,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACX8F,YAAa,GACbG,eAAe,EACf7C,iBAAkB,GAGpB,EAAKnD,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKgG,aAAe,EAAKA,aAAahG,KAAlB,gBACpB,EAAKiG,KAAO,EAAKA,KAAKjG,KAAV,gBAXK,E,gEAejBO,KAAKgD,uB,kCAGKjC,GACV,IAAMmC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBACpD,GAAKJ,EAGE,CACL,IAAMK,EAAiBL,EAAYM,WAAU,SAACC,GAAD,OAAUA,EAAKlD,KAAOQ,EAAQR,MAE3E,GAAIgD,GAAkB,EACpBL,EAAYK,GAAgBlC,iBAAmB,EAC/CgC,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAUT,QAC/C,CACLnC,EAAO,2BAAQA,GAAR,IAAiBM,gBAAiB,IACzC,IAAMuC,EAAU,sBAAOV,GAAP,CAAoBnC,IACpCsC,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAUC,UAXtD7C,EAAO,2BAAQA,GAAR,IAAiBM,gBAAiB,IACzCgC,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAU,CAAC5C,KAJpC,MAiBgDA,EAjBhD,EAiBXM,iBAjBW,EAiBMD,oBACiBpB,KAAKH,SAAS,CAAE2F,eAAe,IACzExF,KAAKgD,uB,2CAIL,IAAME,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBACpD,GAAIJ,EAAa,CACf,IAAMW,EAAWX,EAAYY,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAK3C,kBAAiB,GAC/ErB,KAAKH,SAAS,CAAE8C,iBAAkBkB,O,mCAIzByB,GAAa,IAChBD,EAAgBrF,KAAKT,MAArB8F,YACRrF,KAAKH,SAAS,CACZwF,YAAY,GAAD,mBAAMA,GAAN,CAAmBC,Q,6BAI1B,IACE3C,EAAqB3C,KAAKT,MAA1BoD,iBACR,OACE,kBAAC,IAAD,CAAMnB,GAAG,QAAQb,cAAY,wBAC3B,6BACE,yBACEuB,IAAI,2DACJC,IAAI,OACJhC,UAAU,iBAEZ,uBAAGQ,cAAY,sBAAuBgC,O,+BAMpC,IAAD,SACgC3C,KAAKT,MAApC8F,EADD,EACCA,YAAaG,EADd,EACcA,cACDjG,EAAYS,KAAKV,MAA7BqG,SAAYpG,MACpB,IAAKA,EAAO,OAAO,kBAAC,IAAD,CAAUiC,GAAG,MAHzB,IAICT,EAAYxB,EAAZwB,QAENa,EAA2Eb,EAA3Ea,MAAOE,EAAoEf,EAApEe,MAAOD,EAA6Dd,EAA7Dc,UAAW+D,EAAkD7E,EAAlD6E,WAAuC7D,EAAWhB,EAAtCiB,SAAYC,cACnD,OACE,yBAAK9B,UAAU,kBACXH,KAAK0F,OACP,wBAAI/E,cAAY,uBACZiB,EADJ,gBAGIQ,WAAWN,GAAOO,QAAQ,GAC1BN,GAAQ,uBAAGpB,cAAY,iBAAf,oBAEZ,yBAAKR,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aAAa+B,IAAML,EAAYM,IAAI,YAClD,6BACE,gEACCyD,EACExF,KAAI,SAACyF,GAAD,OACH,uBACErF,IAAMqF,EAAQnF,MADhB,UAGMmF,EAAQnF,KAHd,aAGuBmF,EAAQC,kBAKvC,4BACErF,KAAK,SACLN,UAAU,MACVQ,cAAY,6BACZW,QAAU,kBAAM,EAAK9B,YAAYuB,IACjCQ,SAAWiE,GALb,aASA,kBAACO,EAAD,CAAgBd,SAAWjF,KAAKyF,eAChC,kBAAC,EAAD,CAAaJ,YAAcA,U,GAjHTxE,aCuCbmF,E,kDAxCb,WAAY1G,GAAQ,IAAD,8BACjB,cAAMA,IAEDE,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,wDAMPsB,GACV,IAAMmC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBACpD,GAAKJ,EACA,CACH,IAAMU,EAAU,sBAAOV,GAAP,CAAoBnC,IACpCsC,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAUC,SAHpCP,aAAaK,QAAQ,eAAgBP,KAAKQ,UAAU,CAAC5C,O,+BAO/D,IAAD,EACqBf,KAAKV,MAAzByB,EADD,EACCA,QAASW,EADV,EACUA,OACTE,EAA4Bb,EAA5Ba,MAAOC,EAAqBd,EAArBc,UAAWC,EAAUf,EAAVe,MAC1B,OACE,yBAAK3B,UAAU,UAAUQ,cAAY,WACnC,yBAAKR,UAAU,aAAa+B,IAAML,EAAYM,IAAI,YAClD,wBAAIxB,cAAce,GAAWE,GAC7B,wCACUQ,WAAWN,GAAOO,QAAQ,U,GAxBnBxB,aC0DVoF,E,kDA3Db,WAAY3G,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACX+E,aAAc,GACd4B,MAAO,GALQ,E,gEAUjBlG,KAAKuE,2BACLvE,KAAKmG,e,iDAIL,IAAMjD,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBAChDJ,GACFlD,KAAKH,SAAS,CACZyE,aAAa,YAAKpB,O,mCAMtB,IAEM/D,EAFSgE,KAAKC,MAAMC,aAAaC,QAAQ,iBAEzBQ,QADN,SAACC,EAAKqC,GAAN,MAAe,CAAEtE,MAAOiC,EAAIjC,MAAQsE,EAAItE,UAExD9B,KAAKH,SAAS,CACZqG,MAAO/G,EAAO2C,U,+BAIR,IAAD,EACyB9B,KAAKT,MAA7B+E,EADD,EACCA,aAAc4B,EADf,EACeA,MACtB,OACE,yBAAK/F,UAAU,UACb,wBAAIQ,cAAY,kCAAhB,4BAEQ2D,EAAaH,OAFrB,0BAKA,yBAAKhE,UAAU,YACZmE,EAAalE,KAAI,SAACW,GAAD,OAChB,kBAAC,EAAD,CACEP,IAAMO,EAAQR,GACdQ,QAAUA,EACVW,OAAO,mCAIb,2BACE,2CADF,aAEUU,WAAW8D,GAAO7D,QAAQ,U,GArDfxB,aCqCdwF,E,uKAnCX,IAAMC,EAAO,mEAEb,OACE,8BAAUnG,UAAU,OAClB,0DACA,yBAAKA,UAAU,YACb,qCACA,2BAAOA,UAAU,QAAQG,QAAQ,UAC/B,2BAAOG,KAAK,QAAQP,MAAM,SAASQ,KAAK,SAASH,GAAG,WACpD,yBAAK2B,IARI,sDAQaC,IAAI,WAAWhC,UAAU,WAGnD,sDACA,yBAAKA,UAAU,YACb,2BAAOA,UAAU,QAAQG,QAAQ,QAC/B,2BAAOG,KAAK,QAAQP,MAAM,OAAOQ,KAAK,SAASH,GAAG,SADpD,OAGE,yBAAK2B,IAAMoE,EAAOnE,IAAI,OAAOhC,UAAU,UAEzC,2BAAOA,UAAU,QAAQG,QAAQ,UAC/B,2BAAOG,KAAK,QAAQP,MAAM,SAASQ,KAAK,SAASH,GAAG,WADtD,aAGE,yBAAK2B,IAAMoE,EAAOnE,IAAI,OAAOhC,UAAU,UAEzC,2BAAOA,UAAU,QAAQG,QAAQ,OAC/B,2BAAOG,KAAK,QAAQP,MAAM,MAAMQ,KAAK,SAASH,GAAG,QADnD,MAGE,yBAAK2B,IAAMoE,EAAOnE,IAAI,OAAOhC,UAAU,gB,GA7B3BU,aCwGT0F,E,kDAvGb,WAAYjH,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXiH,SAAU,CACR9F,KAAM,GACN+F,IAAK,GACL3B,MAAO,GACP4B,SAAU,GACVC,IAAK,GACLC,SAAU,GACVC,YAAa,GACbC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,KAIZ,EAAKhC,aAAe,EAAKA,aAAavF,KAAlB,gBACpB,EAAKwH,MAAQ,EAAKA,MAAMxH,KAAX,gBACb,EAAKyH,UAAY,EAAKA,UAAUzH,KAAf,gBACjB,EAAK0H,KAAO,EAAKA,KAAK1H,KAAV,gBArBK,E,4DAwBwB,IAAD,IAA3BQ,OAAUC,EAAiB,EAAjBA,MAAOQ,EAAU,EAAVA,KAC9BV,KAAKH,UAAS,SAACuH,GAAD,MAAgB,CAC5BZ,SAAS,2BACJY,EAAUZ,UADP,kBAEL9F,EAAOR,U,4BAKRmH,EAASC,EAASlD,EAAa1C,GACnC,OACE,2BACEhB,KAAO4G,EACPlD,YAAcA,EACd3D,KAAK,OACLP,MAAQmH,EACRtH,SAAWC,KAAKgF,aAChBrE,cAAce,EACdvB,UAAYmH,M,6BAMhBC,OAAO5B,SAAS6B,KAAO,M,kCAGZ,IACHhB,EAAaxG,KAAKT,MAAlBiH,SACR,OAAKiB,OAAOC,OAAOlB,GAAUmB,MAAK,SAACC,GAAD,MAAe,KAAPA,KAInCnD,QAAQC,IAAI,6BAHjBrB,aAAawE,QACN7H,KAAKmH,U,+BAKN,IAAD,EAEmCnH,KAAKT,MADvCmB,EADD,EACCA,KAAM+F,EADP,EACOA,IAAK3B,EADZ,EACYA,MAAO4B,EADnB,EACmBA,SAAUC,EAD7B,EAC6BA,IAAKC,EADlC,EACkCA,SACvCC,EAFK,EAELA,YAAaC,EAFR,EAEQA,OAAQC,EAFhB,EAEgBA,OAAQC,EAFxB,EAEwBA,OAC/B,OACE,0BAAM7G,UAAU,QACd,8BAAUA,UAAU,UAClB,kEACA,yBAAKA,UAAU,QACXH,KAAKiH,MAAMvG,EAAM,OAAQ,gBAAiB,qBAC1CV,KAAKiH,MAAMR,EAAK,MAAO,MAAO,gBAC9BzG,KAAKiH,MAAMnC,EAAO,QAAS,QAAS,kBACpC9E,KAAKiH,MAAMP,EAAU,WAAY,WAAY,mBAEjD,yBAAKvG,UAAU,QACXH,KAAKiH,MAAMN,EAAK,MAAO,MAAO,gBAC9B3G,KAAKiH,MAAML,EAAU,WAAY,cAAY,qBAEjD,yBAAKzG,UAAU,QACXH,KAAKiH,MAAMJ,EAAa,cAAe,eACvC7G,KAAKiH,MAAMH,EAAQ,SAAU,aAC7B9G,KAAKiH,MAAMF,EAAQ,SAAU,UAC/B,4BAAQrG,KAAK,SAASR,MAAQ8G,EAASjH,SAAWC,KAAKgF,cACrD,0CACA,4BAAQ9E,MAAM,gBAAd,gBACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,kBAAd,qBAIN,kBAAC,EAAD,MACA,4BACEO,KAAK,SACLE,cAAY,oBACZW,QAAUtB,KAAKkH,UACf/G,UAAU,OAJZ,gB,GA3FkBU,aCoBXiH,E,uKAhBX,OACE,yBAAK3H,UAAU,YACb,kBAAC,IAAD,CAAMqB,GAAG,SACP,yBACEU,IAAI,2DACJC,IAAI,aACJhC,UAAU,kBAGd,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAZeU,aCqBRkH,MAnBf,WACE,OACE,6BACE,wBAAI5H,UAAU,SAAd,4BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE6H,KAAK,eACLC,OAAS,SAAC3I,GAAD,OAAW,kBAAC,EAAmBA,MAE1C,kBAAC,IAAD,CAAO0I,KAAK,QAAQE,UAAY7D,IAChC,kBAAC,IAAD,CAAO2D,KAAK,YAAYE,UAAYJ,IACpC,kBAAC,IAAD,CAAOK,OAAK,EAACH,KAAK,IAAIE,UAAY1F,QCPxB4F,QACW,cAA7Bb,OAAO5B,SAAS0C,UAEkB,UAA7Bd,OAAO5B,SAAS0C,UAEhBd,OAAO5B,SAAS0C,SAASC,MAC1B,2DCZNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlJ,MAAK,SAACmJ,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNxE,QAAQwE,MAAMA,EAAMlE,c","file":"static/js/main.00fa163f.chunk.js","sourcesContent":["export async function getCategories() {\n  const requestReturn = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const categories = await requestReturn.json();\n  return categories;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  let result;\n  if (categoryId) {\n    result = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`);\n  } else {\n    result = await fetch(`https://api.mercadolibre.com/sites/MLB/search?q=${query}`);\n  }\n  const itens = await result.json();\n  return itens;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\n\nclass ListCategories extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categories: [],\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    api.getCategories()\n      .then((response) => this\n        .setState({ categories: response }));\n  }\n\n  handleClick(event) {\n    const { onChange } = this.props;\n    onChange(event.target.value);\n  }\n\n  render() {\n    const { categories } = this.state;\n    return (\n      <div className=\"listCategories\">\n        <p>Categorias:</p>\n        <div onChange={ this.handleClick }>\n          {categories.map((category) => (\n            <label htmlFor={ category.id } key={ category.id }>\n              <input\n                type=\"radio\"\n                value={ category.id }\n                key={ category.id }\n                name=\"category\"\n                id={ category.id }\n                data-testid=\"category\"\n              />\n              { category.name }\n              <br />\n            </label>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nListCategories.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ListCategories;\n","import './styles/style.css';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick({ target: { value } }) {\n    const { product, handleAddClick, handleSubClick, handleDeleteClick } = this.props;\n    switch (value) {\n    case '+':\n      handleAddClick(product);\n      break;\n    case '-':\n      handleSubClick(product);\n      break;\n    default:\n      handleDeleteClick(product.id);\n    }\n  }\n\n  cartActionButtons() {\n    const { product } = this.props;\n    const { available_quantity: availableQuantity, quantityToOrder } = product;\n    const smallerValue = 1;\n    return (\n      <div>\n        <h4 data-testid=\"shopping-cart-product-quantity\">{ quantityToOrder }</h4>\n        <button type=\"button\" onClick={ this.handleClick }>X</button>\n        <button\n          type=\"button\"\n          onClick={ this.handleClick }\n          value=\"-\"\n          disabled={ smallerValue === quantityToOrder }\n          data-testid=\"product-decrease-quantity\"\n        >\n          -\n        </button>\n        <button\n          type=\"button\"\n          onClick={ this.handleClick }\n          value=\"+\"\n          disabled={ availableQuantity <= quantityToOrder }\n          data-testid=\"product-increase-quantity\"\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n\n  cardButtons() {\n    const { product } = this.props;\n    const { id, quantityToOrder, available_quantity: availableQuantity } = product;\n    return (\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"product-add-to-cart\"\n          onClick={ this.handleClick }\n          value=\"+\"\n          disabled={ quantityToOrder >= availableQuantity }\n        >\n          Adicionar\n        </button>\n        <p>\n          <Link\n            data-testid=\"product-detail-link\"\n            key={ id }\n            to={ { pathname: `/product/${id}`, state: { product } } }\n          >\n            Ver detalhes\n          </Link>\n        </p>\n      </div>\n    );\n  }\n\n  render() {\n    const { product, testid, inCart } = this.props;\n    const { title, thumbnail, price, id, shipping: { free_shipping: free } } = product;\n    return (\n      <div className=\"product\" data-testid=\"product\">\n        <h4 data-testid={ testid }>{ title }</h4>\n        <img className=\"imgProduct\" src={ thumbnail } alt=\"pictyre\" />\n        <p>\n          { `R$ ${parseFloat(price).toFixed(2)}` }\n        </p>\n        {free && <p data-testid=\"free-shipping\">Frete grátis</p> }\n        {inCart && this.cartActionButtons(id) }\n        {!inCart && this.cardButtons() }\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string,\n  }),\n  testid: PropTypes.string,\n}.isRequired;\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport ListCategories from './ListCategories';\nimport Card from '../components/Card';\n\nclass LandingPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      products: [],\n      search: '',\n      numberOfProducts: 0,\n    };\n\n    this.fetchProductsByQuery = this.fetchProductsByQuery.bind(this);\n    this.fetchProductsByCategoryId = this.fetchProductsByCategoryId.bind(this);\n    this.hendleChange = this.hendleChange.bind(this);\n    this.inputButton = this.inputButton.bind(this);\n    this.handleAddClick = this.handleAddClick.bind(this);\n    this.quantityOfProducts = this.quantityOfProducts.bind(this);\n    this.productsContent = this.productsContent.bind(this);\n  }\n\n  componentDidMount() {\n    this.quantityOfProducts();\n  }\n\n  handleAddClick(product) {\n    const itemsInCart = JSON.parse(localStorage.getItem('NoMasterCart'));\n    if (!itemsInCart) {\n      product = { ...product, quantityToOrder: 1 };\n      localStorage.setItem('NoMasterCart', JSON.stringify([product]));\n    } else {\n      const indexOfProduct = itemsInCart.findIndex((item) => item.id === product.id);\n      if (indexOfProduct >= 0) {\n        itemsInCart[indexOfProduct].quantityToOrder += 1;\n        localStorage.setItem('NoMasterCart', JSON.stringify(itemsInCart));\n      } else {\n        product = { ...product, quantityToOrder: 1 };\n        const itemsToAdd = [...itemsInCart, product];\n        localStorage.setItem('NoMasterCart', JSON.stringify(itemsToAdd));\n      }\n    }\n    this.quantityOfProducts();\n  }\n\n  quantityOfProducts() {\n    const itemsInCart = JSON.parse(localStorage.getItem('NoMasterCart'));\n    if (itemsInCart) {\n      const quantity = itemsInCart.reduce((acc, curr) => acc + curr.quantityToOrder, 0);\n      this.setState({ numberOfProducts: quantity });\n    }\n  }\n\n  async fetchProductsByQuery() {\n    const { search } = this.state;\n    const items = await getProductsFromCategoryAndQuery(false, search);\n    this.setState({\n      products: items.results,\n    });\n  }\n\n  async fetchProductsByCategoryId(categoryId) {\n    const items = await getProductsFromCategoryAndQuery(categoryId, false);\n    this.setState({\n      products: items.results,\n    });\n  }\n\n  hendleChange(event) {\n    const { value } = event.target;\n    this.setState({\n      search: value,\n    });\n  }\n\n  productsContent() {\n    const { products } = this.state;\n    if (products.length === 0) {\n      return (\n        <h3 className=\"subtitle\" data-testid=\"home-initial-message\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </h3>\n      );\n    }\n    return (\n      <div className=\"products\">\n        { products\n          .map((product) => (\n            <Card\n              product={ product }\n              key={ product.id }\n              handleAddClick={ this.handleAddClick }\n            />\n          ))}\n      </div>\n    );\n  }\n\n  inputButton() {\n    const { numberOfProducts } = this.state;\n    return (\n      <div className=\"inputContent\">\n        <input\n          type=\"text\"\n          data-testid=\"query-input\"\n          onChange={ this.hendleChange }\n          className=\"queryInput\"\n          placeholder=\" 🔍\"\n        />\n        <button\n          type=\"button\"\n          data-testid=\"query-button\"\n          onClick={ () => this.fetchProductsByQuery() }\n          className=\"queryButton\"\n        >\n          Pesquisar\n        </button>\n        <Link className=\"cartHome\" to=\"/cart\" data-testid=\"shopping-cart-button\">\n          <img\n            src=\"https://img.icons8.com/fluent/48/000000/shopping-cart-loaded.png\"\n            alt=\"cart\"\n            className=\"button\"\n          />\n          <span\n            className=\"qtd\"\n            data-testid=\"shopping-cart-size\"\n          >\n            { numberOfProducts }\n          </span>\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"landingPage\">\n        <ListCategories onChange={ this.fetchProductsByCategoryId } />\n        <div className=\"container\">\n          { this.inputButton() }\n          { this.productsContent() }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import '../components/styles/style.css';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cartProducts: [],\n    };\n\n    this.getProdutsInLocalStorage = this.getProdutsInLocalStorage.bind(this);\n    this.hasProducts = this.hasProducts.bind(this);\n    this.handleAddClick = this.handleAddClick.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.handleSubClick = this.handleSubClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getProdutsInLocalStorage();\n  }\n\n  handleAddClick(product) {\n    const itemsInCart = JSON.parse(localStorage.getItem('NoMasterCart'));\n    console.log(itemsInCart);\n    if (!itemsInCart) {\n      product = { ...product, quantityToOrder: 1 };\n      localStorage.setItem('NoMasterCart', JSON.stringify([product]));\n    } else {\n      const indexOfProduct = itemsInCart.findIndex((item) => item.id === product.id);\n      if (indexOfProduct >= 0) {\n        itemsInCart[indexOfProduct].quantityToOrder += 1;\n        localStorage.setItem('NoMasterCart', JSON.stringify(itemsInCart));\n      } else {\n        product = { ...product, quantityToOrder: 1 };\n        const itemsToAdd = [...itemsInCart, product];\n        localStorage.setItem('NoMasterCart', JSON.stringify(itemsToAdd));\n      }\n    }\n    this.getProdutsInLocalStorage();\n  }\n\n  handleSubClick(product) {\n    const itemsInCart = JSON.parse(localStorage.getItem('NoMasterCart'));\n    const indexOfProduct = itemsInCart.findIndex((item) => item.id === product.id);\n    itemsInCart[indexOfProduct].quantityToOrder -= 1;\n    localStorage.setItem('NoMasterCart', JSON.stringify(itemsInCart));\n    this.getProdutsInLocalStorage();\n  }\n\n  handleDeleteClick(id) {\n    const itemsInCart = JSON.parse(localStorage.getItem('NoMasterCart'));\n    const indexOfProduct = itemsInCart.findIndex((item) => item.id === id);\n    itemsInCart.splice(indexOfProduct, 1);\n    localStorage.setItem('NoMasterCart', JSON.stringify(itemsInCart));\n    this.getProdutsInLocalStorage();\n  }\n\n  getProdutsInLocalStorage() {\n    const itemsInCart = JSON.parse(localStorage.getItem('NoMasterCart'));\n    if (itemsInCart) {\n      this.setState({\n        cartProducts: [...itemsInCart],\n      });\n    }\n  }\n\n  hasProducts() {\n    const { cartProducts } = this.state;\n    const arrow = 'https://img.icons8.com/fluent/48/000000/circled-left.png';\n    const cart = ('https://img.icons8.com/fluent/48/000000/shopping-cart-loaded.png');\n    return (\n      <div className=\"fullCart\">\n        <Link to=\"/\"><img src={ arrow } alt=\"arrow\" className=\"button start\" /></Link>\n        <div>\n          <img src={ cart } alt=\"cart\" className=\"button\" />\n          <span><strong> Carrinho de Compras</strong></span>\n        </div>\n        <h3>\n          Você possui\n          { ` ${cartProducts.length} ` }\n          itens no carrinho\n        </h3>\n        <Link to=\"/checkout\">\n          <button type=\"button\" data-testid=\"checkout-products\">\n            Finalizar Compra\n          </button>\n        </Link>\n        <div className=\"products\">\n          {cartProducts.map((product) => (\n            <Card\n              key={ product.id }\n              product={ product }\n              testid=\"shopping-cart-product-name\"\n              inCart\n              handleDeleteClick={ this.handleDeleteClick }\n              handleSubClick={ this.handleSubClick }\n              handleAddClick={ this.handleAddClick }\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  emputCart() {\n    const arrow = 'https://img.icons8.com/fluent/48/000000/circled-left.png';\n    const cart = ('https://img.icons8.com/fluent/48/000000/shopping-cart-loaded.png');\n    return (\n      <div className=\"emptyCart\">\n        <Link to=\"/\">\n          <img src={ arrow } alt=\"arrow\" className=\"button start\" />\n        </Link>\n        <div>\n          <img\n            src={ cart }\n            alt=\"cart\"\n            className=\"button\"\n          />\n          <span><strong> Carrinho de Compras</strong></span>\n        </div>\n        <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\n        <img src=\"https://www.downloadclipart.net/medium/box-transparent-background.png\" alt=\"box\" />\n      </div>\n    );\n  }\n\n  render() {\n    const { cartProducts } = this.state;\n    return (\n      <div>\n        {cartProducts.length > 0 && this.hasProducts()}\n        {cartProducts.length <= 0 && this.emputCart()}\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EvaluationFrom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      message: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(name, { target: { value } }) {\n    this.setState({ [name]: value });\n  }\n\n  handleClick() {\n    const { onSubmit } = this.props;\n    onSubmit(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"evaluation\">\n        <h3>Avaliações</h3>\n        <form className=\"formEvaluation\">\n          <label htmlFor=\"email\">\n            <input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"email@email.com\"\n              onChange={ (event) => this.handleChange('email', event) }\n              required\n            />\n          </label>\n          <label htmlFor=\"message\">\n            <textarea\n              id=\"message\"\n              placeholder=\"Mensagem de avaliação (opcional)\"\n              onChange={ (event) => this.handleChange('message', event) }\n              data-testid=\"product-detail-evaluation\"\n            />\n          </label>\n          <button type=\"button\" onClick={ this.handleClick }>\n            Adicionar avaliação\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nEvaluationFrom.propTypes = {\n  onSubmit: PropTypes.func,\n}.isRequered;\n\nexport default EvaluationFrom;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Evaluations extends Component {\n  render() {\n    const star = 'https://img.icons8.com/material-sharp/24/4a90e2/star--v2.png';\n    const { evaluations } = this.props;\n    if (!evaluations) return <p>Produto sem avalaições</p>;\n    return (\n      evaluations.map((evaluation) => (\n        <div className=\"msgEvaluation\" key={ evaluation.email }>\n          <span>{ evaluation.email }</span>\n          <div>\n            <img\n              src={ star }\n              alt=\"star\"\n            />\n            <img\n              src={ star }\n              alt=\"star\"\n            />\n            <img\n              src={ star }\n              alt=\"star\"\n            />\n          </div>\n          <p>{ evaluation.message }</p>\n        </div>))\n    );\n  }\n}\n\nEvaluations.propTypes = {\n  evaluations: PropTypes.arrayOf(PropTypes.string),\n}.isRequered;\n\nexport default Evaluations;\n","import '../components/styles/style.css';\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport EvaluationForm from '../components/EvaluationForm';\nimport Evaluations from '../components/Evaluations';\n\nclass ProductDetais extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      evaluations: [],\n      disableButton: false,\n      numberOfProducts: 0,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.newEvaluaion = this.newEvaluaion.bind(this);\n    this.link = this.link.bind(this);\n  }\n\n  componentDidMount() {\n    this.quantityOfProducts();\n  }\n\n  handleClick(product) {\n    const itemsInCart = JSON.parse(localStorage.getItem('NoMasterCart'));\n    if (!itemsInCart) {\n      product = { ...product, quantityToOrder: 1 };\n      localStorage.setItem('NoMasterCart', JSON.stringify([product]));\n    } else {\n      const indexOfProduct = itemsInCart.findIndex((item) => item.id === product.id);\n      // console.log(indexOfProduct);\n      if (indexOfProduct >= 0) {\n        itemsInCart[indexOfProduct].quantityToOrder += 1;\n        localStorage.setItem('NoMasterCart', JSON.stringify(itemsInCart));\n      } else {\n        product = { ...product, quantityToOrder: 1 };\n        const itemsToAdd = [...itemsInCart, product];\n        localStorage.setItem('NoMasterCart', JSON.stringify(itemsToAdd));\n      }\n    }\n    const { quantityToOrder, available_quantity: availableQuantity } = product;\n    if (quantityToOrder >= availableQuantity) this.setState({ disableButton: true });\n    this.quantityOfProducts();\n  }\n\n  quantityOfProducts() {\n    const itemsInCart = JSON.parse(localStorage.getItem('NoMasterCart'));\n    if (itemsInCart) {\n      const quantity = itemsInCart.reduce((acc, curr) => acc + curr.quantityToOrder, 0);\n      this.setState({ numberOfProducts: quantity });\n    }\n  }\n\n  newEvaluaion(evaluation) {\n    const { evaluations } = this.state;\n    this.setState({\n      evaluations: [...evaluations, evaluation],\n    });\n  }\n\n  link() {\n    const { numberOfProducts } = this.state;\n    return (\n      <Link to=\"/cart\" data-testid=\"shopping-cart-button\">\n        <div>\n          <img\n            src=\"https://img.icons8.com/fluent/48/000000/circled-left.png\"\n            alt=\"cart\"\n            className=\"button start\"\n          />\n          <p data-testid=\"shopping-cart-size\">{ numberOfProducts }</p>\n        </div>\n      </Link>\n    );\n  }\n\n  render() {\n    const { evaluations, disableButton } = this.state;\n    const { location: { state } } = this.props;\n    if (!state) return <Redirect to=\"/\" />;\n    const { product } = state;\n    const {\n      title, price, thumbnail, attributes, shipping: { free_shipping: free } } = product;\n    return (\n      <div className=\"productDetails\">\n        { this.link() }\n        <h3 data-testid=\"product-detail-name\">\n          { title }\n          &nbsp; - R$&nbsp;\n          { parseFloat(price).toFixed(2) }\n          { free && <p data-testid=\"free-shipping\">Frete grátis</p> }\n        </h3>\n        <div className=\"containerDetails\">\n          <div className=\"contentDetails\">\n            <img className=\"imgProduct\" src={ thumbnail } alt=\"Product\" />\n            <div>\n              <p>Especificações Técnicas:</p>\n              {attributes\n                .map((atribut) => (\n                  <p\n                    key={ atribut.name }\n                  >\n                    {`${atribut.name}: ${atribut.value_name}`}\n                  </p>\n                ))}\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            className=\"add\"\n            data-testid=\"product-detail-add-to-cart\"\n            onClick={ () => this.handleClick(product) }\n            disabled={ disableButton }\n          >\n            Adicionar\n          </button>\n          <EvaluationForm onSubmit={ this.newEvaluaion } />\n          <Evaluations evaluations={ evaluations } />\n        </div>\n      </div>\n    );\n  }\n}\n\nProductDetais.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      product: PropTypes.shape({\n        title: PropTypes.string,\n        thumbnail: PropTypes.string,\n        price: PropTypes.number,\n        attributes: PropTypes.arrayOf(PropTypes.object),\n        shipping: PropTypes.shape({\n          free_shipping: PropTypes.bool,\n        }),\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default ProductDetais;\n","import './styles/style.css';\nimport React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass CardReview extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(product) {\n    const itemsInCart = JSON.parse(localStorage.getItem('NoMasterCart'));\n    if (!itemsInCart) localStorage.setItem('NoMasterCart', JSON.stringify([product]));\n    else {\n      const itemsToAdd = [...itemsInCart, product];\n      localStorage.setItem('NoMasterCart', JSON.stringify(itemsToAdd));\n    }\n  }\n\n  render() {\n    const { product, testid } = this.props;\n    const { title, thumbnail, price } = product;\n    return (\n      <div className=\"product\" data-testid=\"product\">\n        <img className=\"imgProduct\" src={ thumbnail } alt=\"pictyre\" />\n        <h4 data-testid={ testid }>{ title }</h4>\n        <p>\n          { `R$ ${parseFloat(price).toFixed(2)}` }\n        </p>\n      </div>\n    );\n  }\n}\n\nCardReview.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string,\n  }),\n  testid: PropTypes.string,\n}.isRequired;\n\nexport default CardReview;\n","import React, { Component } from 'react';\nimport CardReview from './CardReview';\n\nclass ReviewProducts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cartProducts: [],\n      total: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.getProdutsInLocalStorage();\n    this.totalValue();\n  }\n\n  getProdutsInLocalStorage() {\n    const itemsInCart = JSON.parse(localStorage.getItem('NoMasterCart'));\n    if (itemsInCart) {\n      this.setState({\n        cartProducts: [...itemsInCart],\n      });\n    }\n  }\n\n  totalValue() {\n    const values = JSON.parse(localStorage.getItem('NoMasterCart'));\n    const reducer = (acc, cur) => ({ price: acc.price + cur.price });\n    const result = values.reduce(reducer);\n    this.setState({\n      total: result.price,\n    });\n  }\n\n  render() {\n    const { cartProducts, total } = this.state;\n    return (\n      <div className=\"review\">\n        <h3 data-testid=\"shopping-cart-product-quantity\">\n          Você possui\n          { ` ${cartProducts.length} ` }\n          itens no carrinho\n        </h3>\n        <div className=\"products\">\n          {cartProducts.map((product) => (\n            <CardReview\n              key={ product.id }\n              product={ product }\n              testid=\"shopping-cart-product-name\"\n            />\n          ))}\n        </div>\n        <p>\n          <strong>Total: </strong>\n          { `R$ ${parseFloat(total).toFixed(2)}` }\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default ReviewProducts;\n","import './styles/style.css';\nimport React, { Component } from 'react';\n\nclass PayMethod extends Component {\n  render() {\n    const card = 'https://img.icons8.com/fluent/48/000000/bank-card-front-side.png';\n    const bankSlip = 'https://img.icons8.com/fluent/48/000000/barcode.png';\n    return (\n      <fieldset className=\"pay\">\n        <legend>Método de Pagamento</legend>\n        <div className=\"bankSlip\">\n          <p>Boleto</p>\n          <label className=\"label\" htmlFor=\"boleto\">\n            <input type=\"radio\" value=\"boleto\" name=\"method\" id=\"boleto\" />\n            <img src={ bankSlip } alt=\"bankSlip\" className=\"card\" />\n          </label>\n        </div>\n        <p>Cartão de Crédito</p>\n        <div className=\"credCard\">\n          <label className=\"label\" htmlFor=\"visa\">\n            <input type=\"radio\" value=\"visa\" name=\"method\" id=\"visa\" />\n            Visa\n            <img src={ card } alt=\"card\" className=\"card\" />\n          </label>\n          <label className=\"label\" htmlFor=\"master\">\n            <input type=\"radio\" value=\"master\" name=\"method\" id=\"master\" />\n            MasterCard\n            <img src={ card } alt=\"card\" className=\"card\" />\n          </label>\n          <label className=\"label\" htmlFor=\"elo\">\n            <input type=\"radio\" value=\"elo\" name=\"method\" id=\"elo\" />\n            Elo\n            <img src={ card } alt=\"card\" className=\"card\" />\n          </label>\n        </div>\n      </fieldset>\n    );\n  }\n}\n\nexport default PayMethod;\n","import React, { Component } from 'react';\nimport PayMethod from './PayMethod';\n\nclass ClientsData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: {\n        name: '',\n        cpf: '',\n        email: '',\n        telefone: '',\n        cep: '',\n        endereco: '',\n        complemento: '',\n        numero: '',\n        cidade: '',\n        estado: '',\n      },\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onTag = this.onTag.bind(this);\n    this.checkForm = this.checkForm.bind(this);\n    this.home = this.home.bind(this);\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState((prevState) => ({\n      userData: {\n        ...prevState.userData,\n        [name]: value,\n      },\n    }));\n  }\n\n  onTag(keyName, tagName, placeholder, testid) {\n    return (\n      <input\n        name={ tagName }\n        placeholder={ placeholder }\n        type=\"text\"\n        value={ keyName }\n        onChange={ this.handleChange }\n        data-testid={ testid }\n        className={ tagName }\n      />\n    );\n  }\n\n  home() {\n    window.location.href = '/';\n  }\n\n  checkForm() {\n    const { userData } = this.state;\n    if (!Object.values(userData).some((el) => el === '')) {\n      localStorage.clear();\n      return this.home();\n    }\n    return console.log('Formulário incompleto');\n  }\n\n  render() {\n    const { name, cpf, email, telefone, cep, endereco,\n      complemento, numero, cidade, estado } = this.state;\n    return (\n      <form className=\"form\">\n        <fieldset className=\"client\">\n          <legend>Informações do Comprador</legend>\n          <div className=\"div1\">\n            { this.onTag(name, 'name', 'Nome Completo', 'checkout-fullname') }\n            { this.onTag(cpf, 'cpf', 'CPF', 'checkout-cpf') }\n            { this.onTag(email, 'email', 'Email', 'checkout-email') }\n            { this.onTag(telefone, 'telefone', 'Telefone', 'checkout-phone') }\n          </div>\n          <div className=\"div2\">\n            { this.onTag(cep, 'cep', 'CEP', 'checkout-cep') }\n            { this.onTag(endereco, 'endereco', 'Endereço', 'checkout-address') }\n          </div>\n          <div className=\"div3\">\n            { this.onTag(complemento, 'complemento', 'Complemento') }\n            { this.onTag(numero, 'numero', 'Número') }\n            { this.onTag(cidade, 'cidade', 'Cidade') }\n            <select name=\"estado\" value={ estado } onChange={ this.handleChange }>\n              <option>Estado</option>\n              <option value=\"São Paulo\">São Paulo</option>\n              <option value=\"Minas Gerais\">Minas Gerais</option>\n              <option value=\"Rio de Janeiro\">Rio de Janeiro</option>\n            </select>\n          </div>\n        </fieldset>\n        <PayMethod />\n        <button\n          type=\"button\"\n          data-testid=\"checkout-products\"\n          onClick={ this.checkForm }\n          className=\"buy\"\n        >\n          Comprar\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ClientsData;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReviewProducts from '../components/ReviewProducts';\nimport ClientsData from '../components/ClientsData';\n\nclass Checkout extends Component {\n  render() {\n    return (\n      <div className=\"checkout\">\n        <Link to=\"/cart\">\n          <img\n            src=\"https://img.icons8.com/fluent/48/000000/circled-left.png\"\n            alt=\"arrow back\"\n            className=\"button start\"\n          />\n        </Link>\n        <ReviewProducts />\n        <ClientsData />\n      </div>\n    );\n  }\n}\n\nexport default Checkout;\n","import React from 'react';\nimport { HashRouter as BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './pages/LandingPage';\nimport Cart from './pages/Cart';\nimport ProductDetais from './pages/ProductDetais';\nimport Checkout from './pages/Checkout';\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"title\">No Master Store Shopping</h1>\n      <BrowserRouter>\n        <Switch>\n          <Route\n            path=\"/product/:id\"\n            render={ (props) => <ProductDetais { ...props } /> }\n          />\n          <Route path=\"/cart\" component={ Cart } />\n          <Route path=\"/checkout\" component={ Checkout } />\n          <Route exact path=\"/\" component={ LandingPage } />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}